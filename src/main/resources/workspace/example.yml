# 该配置文件的Key 请确保唯一不重复
# Make sure that the key of the configuration file is unique and not duplicated
example:
  # 该文件的Desc描述 无实际作用，在指令/death list中更方便管理配置
  # The Desc description of this file has no practical effect, and it is more convenient to manage the configuration in the directive/death list
  desc: 'example config'
  # 配置文件的权重，权重高的优先
  # 在大多数时候根据Check节点判断出得配置并不是唯一的，可能玩家同时满足多个Check节点判断
  # 此时就需要权重来决定选择到那个Check节点所属的配置文件
  # 如一个配置权重是10 一个是100 则当Check节点同时这两个满足的时候 执行权重为100的配置文件中的Action节点
  # The weight of the configuration file, the higher weight is preferred
  # Most of the time, the configuration judged by the Check node is not unique, and it is possible that the player satisfies multiple Check nodes at the same time
  # At this point, the weight is needed to determine which configuration file to which Check node belongs
  # For example, if one configuration weight is 10 and the other is 100, then when both check nodes are satisfied, the Action node in the configuration file with a weight of 100 will be executed
  weight: 100
  # 主配置
  # Main configuration
  only_normal: true
  disposition:
    # Check节点 负责根据玩家死亡信息来判断处玩家对应的配置
    # The Check node is responsible for judging the player's corresponding configuration based on the player's death information
    check:
      # Pre-Action 顾名思义 即在一切的开始前执行的脚本动作
      # 当返回true时 继续下面的判断 反之则停止，跳过本配置
      # Pre-Action As the name suggests, it is a scripted action that is executed before everything starts
      # When true is returned, continue the following judgment, otherwise it will stop and skip this configuration
      pre_action:
        # Whether it is enabled
        # true will be enabled, and the effect will be judged as mentioned above
        # false will be turned off, and it will not be judged, which is equivalent to returning true at the beginning, and directly execute the following configuration
        enable: false
        # 脚本类型
        # 目前支持Kether和JavaScript
        # 标识名可在setting.yml 中改
        # 标识名的作用就是你可以简化书写，比如你配置了kether的标识名为ke 则此时type既可以填ke
        # Script type
        # Kether and JavaScript are currently supported
        # The handle name can be changed in setting.yml
        # The function of the identifier is that you can simplify the writing, for example, if you configure the identity name of kether to ke, then the type can be filled in ke
        type: ke
        # 执行的脚本动作
        # Script actions executed
        script: |-
          print "Pre-Action."
      # Select玩家选择器
      # 技巧提示：当你需要任何玩家都可以通过的判断，你可以直接关掉Select节点，这样其实就是不判断，同理。
      # Select player selector
      # Tip: When you need a judgment that any player can pass, you can simply turn off the Select node, which is actually not judgment, the same is true.
      select:
        # 是否开启，开启则进行判断，关闭则默认符合条件继续判断
        # Whether it is enabled or not, it will be judged if it is enabled, and if it is disabled, it will continue to be judged if the conditions are met by default
        enable: true
        # 限制玩家
        # Restrict players
        player:
          # 关掉则不限制玩家
          # Turning off does not restrict players
          enable: true
          config:
            # 填入你需要限制的玩家，在如下列表中的玩家死亡时，本判断才会通过
            # Fill in the players you want to restrict, and this judgment will only pass when the players in the following list die
            info:
              - 'InkerXoe'
              - 'OishEternity'
        # 限制权限
        # Restrict permissions
        perm:
          # 关掉则不限制权限
          # If you turn it off, you won't be able to restrict permissions
          enable: true
          config:
            #type[portion：info其中之一, all：info中全部权限均有]
            #type[portion: info one of them, all:All permissions are available]
            type: 'portion'
            info:
              - 'oish.eternity.perm'
              - 'oish.eternity.perms'
      # Region玩家判断
      # Region Player Judgment
      region:
        # 开关 道理如上
        # Switch The principle is as above
        enable: true
        # 判断世界
        # Judge the world
        world:
          # 如上
          # As above
          enable: true
          info:
            - 'world'
        # 判断领地
        # Determine the territory
        territory:
          # 如上
          # As above
          enable: true
          # 这里也是使用标识名，应该用什么视你的领地插件定
          # This is also the use of the identifier, what should be used depends on your territory plugin
          adapter: 'gd'
          info:
            - 'test'
      # 顾名思义 和上面的Pre-Action一样，在这个判断之后 剩下的配置文件会根据权重选定
      # 也是为了特殊需求，可以在这里再次判断
      # As the name suggests, as in the Pre-Action above, after this judgment, the rest of the configuration files will be selected according to the weights
      # It is also for special needs, which can be judged again here
      main_action:
        enable: true
        type: kether
        script: |-
          print "Post-Action."
    # 下面就是Action节点了，有关掉落什么的都在这里控制
    # The following is the Action node, and everything about the drop is controlled here
    action:
      drop:
        item:
          enable: true
          # ['百分比掉落: percentage' '范围掉落: range' '指定格掉落: slot' '指定数掉落: amount' '指定Material掉落: material' '指定Lore掉落: lore' '指定Nbt掉落: nbt' '全掉落: all' '不掉落: none']
          # ['Percentage Drop: Percentage' 'Range Drop: Range' 'Target Grid Drop: Slot' 'Target Number Drop: Amount' 'Target Material Drop: material' 'Target Lore Drop: lore' 'Target Nbt Drop: nbt' 'All Drop: All' 'No Drop: None']
          type: 'percentage'
          info: '50%'
          protected:
            enable: true
            # ['slot: 制定物品格' 'material：指定材质' 'lore：指定lore' 'nbt：指定nbt']
            # ['slot: specify item compartment' 'material:specify material' 'lore:specify lore' 'nbt:specify nbt']
            info:
              - 'slot<->0|1|2'
              - 'lore<->OishEternity 测试Lore'
              - 'nbt<->OishEternityTag:测试Tag'
        exp:
          enable: true
          # ['百分比掉落: percentage' '范围掉落: range' '指定掉落: amount' '不掉落: none' '全掉落: all']
          # ['Percentage Drop: Percentage' 'Range Drop: range' 'Specified Drop: Amount' 'No Drop: None' 'All Drop: all']
          type: 'percentage'
          didnt: 5
          info: '50%'
      # Death drops
      relic:
        enable: true
        # ['normal', 'fancy', 'chest', 'redeem']
        type: 'fancy'
        info: ''
        fancy_drop:
          # 偏移量
          # Offset
          offset:
            # 横向偏移量(或随机最小偏移量-随机最大偏移量)
            # Lateral Offset (or Random Minimum Offset - Random Maximum Offset)
            x: 0.1
            # 纵向偏移量(或随机最小偏移量-随机最大偏移量)
            # Longitudinal Offset (or Random Minimum Offset - Random Maximum Offset)
            y: 0.8
          delay: 3
          angle:
            # 抛射类型(round/random)
            # Projectile Type (Round/Random)
            type: round
      # 赎回还是个饼
      redeem:
        enable: false
        type: ''
        info: ''
      # 重生点
      # Spawn Point
      spawn:
        enable: true
        # ['death:死亡点' 'coo：坐标' 'loc: 重生点']
        # ['death:death point' 'coo:coordinates' 'loc:respawn point']
        type: death
        info: world 1 1 1
        auto_spawn:
          enable: true
          delay: 5

      post_action:
        type: kether
        script: |-
          print "Post-Action."
